server.port=9090

# PostgreSQL Configuration locally -----------------
spring.datasource.url=jdbc:postgresql://localhost:5432/screeningdb
spring.datasource.username=user
spring.datasource.password=pass123
#-------------------------------------------




# For Docker PostgreSQL instance - uncomment when using docker, docker compose
#spring.datasource.username=dbuser
#spring.datasource.password=pass123
#spring.datasource.url=jdbc:postgresql://db-1:5432/screeningdb




#PostgreSQL Configuration (Kubernetes)
#spring.datasource.url=jdbc:postgresql://postgres:5432/screeningdb
#spring.datasource.username=dbuser
#spring.datasource.password=pass123















# auto generate sql and update db schema at startup
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update

#show and format sql
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true


#dialect-----------
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#------------------






# App Properties
app.jwtSecret=123esef
app.jwtExpirationMs=86400000

logging.level.org.springframework.security=DEBUG




#minIO
minio.url=http://127.0.0.1:9000
minio.accessKey=newusername
minio.secretKey=newpassword
minio.bucketName=resumes

logging.level.com.Job_Prescreening_system.demo.Services.MinioService=DEBUG
# 

#and is accesible in http://127.0.0.1:9001 in the browser
# for having access to the files I am updating the policy: mc anonymous set public local/resumes
# do not fortget I have created a folder mkdir /minio-data in my home folder

#Access the MinIO object storage API at http://127.0.0.1:9000.
#Access the MinIO console (web UI) at http://127.0.0.1:9001.
#
#command in t terminal to use it:
#export MINIO_ROOT_USER=newusername
#export MINIO_ROOT_PASSWORD=newpassword
#minio server ~/minio-data --address ":9000" --console-address ":9001"





#Open AI - API key
ApiKey = sk-_Ua3GA0KAB-mfh1FrCu495odipU_D4EYxzoXpba_MNT3BlbkFJ6IcybBmeBjrkO0SzG3Jab25Gd_I0gT0X1Y8S23DQ4A






#healthchecks
# Enable Spring Boot Actuator health endpoints
management.endpoints.web.exposure.include=health
management.endpoint.health.probes.enabled=true
management.endpoint.health.show-details=always
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true





