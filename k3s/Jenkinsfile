pipeline {
    agent any
    environment {
        BACKEND_IMAGE = 'ghcr.io/panos994/application-submission-and-pre-screening-system-based-on-resume-analysis/backend:1.0'
        FRONTEND_IMAGE = 'ghcr.io/panos994/application-submission-and-pre-screening-system-based-on-resume-frontend:latest'
    }
    stages {
        stage('Docker Login to GHCR') {
            steps {
                script {
                    def github_username = "Panos994"
                    def github_token = "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"
                    // Log in to GHCR using the token and username
                    sh "echo ${github_token} | docker login ghcr.io -u ${github_username} --password-stdin"
                }
            }
        }
        stage('Pull Backend Image') {
            steps {
                sh 'docker pull $BACKEND_IMAGE'
            }
        }
        stage('Pull Frontend Image') {
            steps {
                sh 'docker pull $FRONTEND_IMAGE'
            }
        }
        stage('Deploy to Kubernetes') {
            environment {
                KUBECONFIG = '/etc/rancher/k3s/k3s.yaml' // Path to kubeconfig file on EC2 instance
            }
            steps {
                // Applying database and MinIO manifests
                sh 'kubectl apply -f /home/it2021154/Desktop/DraftJobSystem/Application-Submission-and-Pre-Screening-System-Based-on-Resume-Analysis/k3s/database'
                sh 'kubectl apply -f /home/it2021154/Desktop/DraftJobSystem/Application-Submission-and-Pre-Screening-System-Based-on-Resume-Analysis/k3s/minio'
                // Apply the backend and frontend images from GitHub Packages
                sh 'kubectl set image deployment/backend backend=$BACKEND_IMAGE'
                sh 'kubectl set image deployment/frontend frontend=$FRONTEND_IMAGE'
            }
        }
    }
}
