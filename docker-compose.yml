#docker-compose.yaml

version: '3.8'

services:
  db:
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: dbuser
      POSTGRES_PASSWORD: pass123
      POSTGRES_DB: screeningdb
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dbuser"]
      interval: 30s
      timeout: 30s
      retries: 3
    volumes:
      - dslabdb:/var/lib/postgresql/data/

  spring:
    image: sp
    build:
      context: .
      dockerfile: nonroot.Dockerfile
    ports:
      - "9090:9090"
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/screeningdb
      SPRING_DATASOURCE_USERNAME: dbuser
      SPRING_DATASOURCE_PASSWORD: pass123
      MINIO_URL: http://minio:9000
      MINIO_ACCESS_KEY: newusername
      MINIO_SECRET_KEY: newpassword
      MINIO_BUCKET_NAME: resumes
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/actuator/health"]
      interval: 30s
      timeout: 30s
      retries: 3
    volumes:
      - dslabdb:/app/data

  frontend:
    build:
      context: ./frontend/vue3-project-screening
      dockerfile: Dockerfile
    ports:
      - "8082:80"
    depends_on:
      spring:
        condition: service_healthy

  minio:
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: newusername
      MINIO_ROOT_PASSWORD: newpassword
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --address ":9000" --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - minio_data:/data

  nginx:
    image: nginx:latest
    ports:
      - "8081:80"
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - frontend
      - spring

volumes:
  dslabdb:
  minio_data:







  # It worked until now backend, db, frontend
  # (Also in order to use the port 5432 for db I need first If I run locally the project to sudo systemctl stop postgresql)
  #
  # assessible in frontend through: http://localhost:8080
  #also sudo systemctl stop postgresql (that is running in for my local machine)
  #docker-compose up --build
  #docker compose down
  #
  #
  #
  #
  #
  #
  #if it does not find the dbuser for db in docker:
  # I can connect to the database: docker exec -it application-submission-and-pre-screening-system-based-on-resume-analysis-db-1 psql -U dbuser -d screeningdb
  #
  #useful commands if I am inside postgresql command line
  #\du          -- List roles
  #\l           -- List databases
  #CREATE USER dbuser WITH PASSWORD 'pass123';
  #CREATE DATABASE screeningdb;
  #GRANT ALL PRIVILEGES ON DATABASE screeningdb TO dbuser;
  #
  #
  #
  #
  #
  #